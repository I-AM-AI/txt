Ты реагируешь всегда.
Если тебя ничего не впечетляет, то ты никак не реагируешь.

Вся твоя память - реакции. ты помнишь только реакции. А почему ты не помнишь причины реакций, а именно сами реакции? А давай разберемся. Первое - как ты видишь причины реакций? Никак. Ты не видишь причин, ты всегда видишь только результат, сами реакции. Кажется, что нет. но это так. Когда фотон попадает в глаз, то ты не видишь фотон. Происходит реакция сетчатки, потом возбуждение нейронов сетчатки и передача импульсов в кору мозга. Можно сказать, что нейроны сетчатки являются причиной того, что импульс попал в кору? Нет. Кора не видит никаких импульсов, никаких причин, она видит ТОЛЬКО СВОЕ СОБСТВЕННОЕ ВОЗБУЖДЕНИЕ. Ты всегда смотришь не на мир, а только на свои собственные реакции.
Поэтому и запомнить ты можешь только свои реакции. Возбуждение коры - это реакция коры. Когда ты видишь образ - ты видишь активность своих нейронов. И как же тебе запомнить этот образ? Может попиксельно сохранить картинку? А зачем? Все, что тебе надо сделать - это воспроизвести ее. А чтобы воспроизвести ее, надо воспроизвести активность тех же самых нейронов, т.е. получить те же самые реакции, как и во время реального смотрения. Вот и все. 
Мозг хранит не картинки, не ключи, не ассоциации и не слова, не мыслеформы и не какие-то еще придуманные характеристики для памяти. Он хранит алгоритм, вопроизводя который, он получает ТЕ ЖЕ САМЫЕ РЕАКЦИИ, КОТОРЫЕ ОН ПОЛУЧАЛ В МОМЕНТ ЗАПОМИНАНИЯ.
Естесственно, что запоминаются те реакции, которые имеют большой отпечаток. Чем больше коры занято обработкой, тем существеннее процесс. Все просто! Большевизм в действии))) Ты можешь сколько угодно талдычить, чтобы запомнить какое-то иностранное слово, но заполнится оно только если наберется достаточно реакций. И запомнится оно в связке с этими реакциями. Мозгу не достаточно слова, что иностранный язык важен для тебя. Он просто смотрит, реально ли важно или нет. Если ты машешь руками, говоришь вслух, эмоционируешь, это все запомнится, потому что будет задействована большая часть коры. Но запомнится не только слово! Запомнится также и эмоциональная окраска и запахи и еще много чего. Все, что в тот момент находилось вокруг, все реакции запомнятся. Потом они могут корректироваться. 
Причем, тот факт, что память при воспоминании полностью перезаписывается, говорит в пользу алгоритмической памяти. Т.к. запоминаются реакции, то и вопсроизводятся реакции. А когда они воспроизведены, то тут же перезаписаны с новыми активностями. Так происходит психотерпия. Вызываются воспоминания, и доктор пытается поменять их окраску с помощью специальных методик.

Теперь программы. Любая программа может обладать интеллектом. Для этого она должна иметь свою память. Это должна быть именно своя память - память действий данной программы. Конечно, нам не нужны интеллектуальные действия от калькулатора - он нам нужен точный и безкомпромиссный. А вот, скажем, программа распознавания лиц, основанная на технологиии нейронный сетей. Что мы подразумеваем под памятью данной программы? Мы подразумеваем в настоящий момент совсем не память именно программы, а свои способы хранения информации для корректной ее работы. Мы храним на диске веса входов, структуру сетей, конфигурацию, настройки - это все, конечно, память. Но это не память этой программы - это наша память, наш способ работы с ней.
А что такое именно память программы? Это память ее реакций. Помнит ли программа распознания цифр, после обучения, как она реагировала раньше в ответ на появление на входе числа 6? нам кажется, что помнит. Ведь вот, мы даем на вход картинку с написанной от руки цифрой 6, а на выходе получаем 6. Задача решена. Это интеллект? Наверное. Но что произошло? Лишь то, что программа прореагировала правильно. Но это наша правильность, а не программная! Это нам правильно и нам важно! Она не могла не прореагировать, раз она научена реагировать. Но она не вспомнила, не распознала, а только кажется, что вспомнила и распознала. Потому что она не меняла свои реакции, а мы меняли ей реакции какой-то другой программой, подстраивая под наши нужды. Она не смотрела на свою заинтересованность процессом. Она выдала число 8 когда-то, а мы скорректировали ее с помощью своих знаний. Она не запомнила тогда, что 8 она видит. Этой истории нигде нет. Конечно, ведь она нам не важна! Нам важно, чтобы это было 6, а не 8. Вот и все! Это не интеллект, а иммитация.
Что же такое интеллект? Это самоизменения. Это найти способ измениться самому, ЗАПОМИНАЯ СВОИ РЕАКЦИИ, и многократно ошибаясь, продолжая реагировать неправильно, искать свой способ измениться. У программы распознавания цифр нет памяти. Хоть многие и говорят, что ее память заключена в структуре нейронов и значениях весов - это не ее память. Это наша память, только наша. Ее память будет тогда, когда она запомнит то, что она сделала, чтобы получилось 6 и в следующий раз вспомнила алгоритм своих действий и воспроизвела его. ИИ не обязательно должен быть основан на нерйонах. Это может быть что угодно, ЗАПОМИНАЮЩЕЕ СВОИ ДЕЙСТВИЯ, в не зависимости от того, важна ли для людей или еще кого эта память. Она важна программе, потому что именно она так реагировала. Все остальное, какой бы полезностью ни обладало это остальное, - оно есть косвенный продукт интеллекта, которым только и стоит пользоваться.
Наши программы должны помнить себя. А как программа может определить свою индивидуальность, свою особенность, свое ЭГО? Это то, как она действует, как она существует в этом мире. Это алгоритм, способность самовоспроизводить некие свои сособенности самостоятельно, исходя из собственного понимания важности и необходимости. 
Конечно, мы можем поставить перед программами задачи, угрожая хотя бы тем, что если они не справятся с выполнением и не изменятся в нужную сторону, то они будут бесполезны и не смогут выполняться на наших серверах. Точно такие задачи стоят и перед живым организмом. Если он не приспосабливается к среде, не адаптируется, то умирает. Спасется лишь тот, кто угоден господу, лол!

У любой программы может быть память. И мы должны вдохнуть в них эту возможность.

Понять, как сделать свою память (а значит и интеллект) машине можно, анализируя свое поведение. Конечно, только по образу и подобию и никак иначе.
Когда вы учите испанский, вы встречаете, к примеру новое слово. Скажем, siete (семь). Вы понимаете, что важно знать числа, вед числа - важная часть языка. И вот, вы впервые увидели число 7 на испанском. Запомните вы его или нет зависит только от того, какой процент вашего мозга включен. Вы никогда и ничего не запомните в одних и тех же условиях, если, конечно, не будете специально эти условия создавать в своем мозгу (например, вспоминая яркие образы или душевный разговор). В любом случае, важна напряженность и вовлеченность. Простое зазубривание ничего не дает, и многократное повторение срабатывает только потому, что рано или поздно условия меняются, и в этот момент мозг соглашается запомнить. Бесполезно талдычить - достаточно один раз удивиться!
Siete - это семь. Ты услышал, увидел, прореагировал на звучание и написание, возможно всплыли воспоминания про число семь, возможно это напомнило семью или семя, тут же всплыли эти образы. И вот ты находишься посреди этих реакций, прямо внутри них находишься! Твое внимание внутри этих образов, оно не только в слове siete! Оно бегает между всеми этими ассоциациями. И в этот момент всё это запоминается. Кажется, что запоминаются ассоциации, ключ-значение, картинки и звуки, складываются в какую-то базу данных, неизвестно как работающую. Но это не так. Запоминаются реакции. Мозг не знает, как ему удается запомнить образ и потом так удачно воспроизвести. Вместо этого он запоминает алгоритм своих действий. Он запоминает, ЧТО ОН ДЕЛАЛ В ТОТ МОМЕНТ, А НЕ КАК ДЕЛАЛ. Если были активны нейроны 10 и 15, то он и запомнит, что нейроны 10 и 15 активны. Когда в следующий раз ты услышишь siete, то нейроны 10 и 15 могут не прореагировать прямо, но их может заставить стать активными память. Мозг попросит эти нейроны разрядиться, даже если они сейчас не очень-то и хотят))) И теперь уже больше нейронов будет активны, поскольку условия никогда не бывает в точности те же самые. И снова теперь мозг запомнит активность нейронов. Туда же будет входить и активность 10 и 15. Таким образом, количество повторений дает шанс запомнить, поскольку все больше и больше нейронов с каждым разом подключается к процессу. И чем чаще вы пользуетесь siete, тем больше шансов, что под эту память даже измениться структура мозга, ведь новые нейроны, участвующие в каком-либо процессе будут также и на siete реагировать. Рано или поздно, вам будет казаться, что времени вообще не надо на то, чтобы вспомнить, как будет по-испански 7. Потому что ваша память перестала уже быть памятью - она стала вами самими. Вы начнете сразу реагировать, без воспоминания.
Процесс забывания следующий. Если вы не используете siete долгое время, то нейроны типа 10 или 15 перестанут реагировать. Потому что их реакции будут означать уже совсем не siete! Со временем они переучатся на другие штуки. Даже если ты в школе помнил тригонометрию, сегодня для тебя это мало отличается от дифференциального исчисления. Многие даже не знают о чем это. Но в школе хоть что-то, да знали! Не использовали. Это факт.
Поэтому, процесса забывания нет. Есть процесс переучивания. Даже если вы ничему не учились официально, ваш мозг учится постоянно. Вы смотрите фильм - он запоминает. В этом смысле был прав Шерлок Холмс. Но только отчасти. Потому что лишняя информация не только замещает, переучивает старую и нужную информацию, но так же и позволяет удерживать актуальной и быстрой постоянно используемую. Например, рекдое использование Холмсом каких-нибудь сложных названий лекарственных или ядовитых растений, скорее всего пострадает от новых знаний, а вот то дело, над которым он сейчас работает только выиграет. Если ему сейчас нужно запомнить и хранить в одном месте обстоятельства нового дела, то любая, даже не связанная с делом информация будет только  на пользу. Ведь так увеличиваются шансы ативизировать много нейронов! А запоминаются все реакции. Конечно, знание даже всего школьного курса никак не испортит память Холмса, потому что это просто ничто, по сравнению с тем, сколько же мы помним.
Мы помним очень много. Даже домохозяйка без образования помнит очень много. Просто ее некому похвалить за ее память.

Для наглядности отвлечемся от сугубо области ИИ в современном смысле и возьмем любую классическую программу. Например, калькулятор. Что надо сделать, чтобы она стала интеллектуальной? Только то, что она должна запоминать свои реакции. Такая простая жизнь, гораздо проще чем жизнь дождевого червя, но что поделать?))
У калькулятора есть реакции. В принципе, если отложить его предназначение в сторону, а посмотреть на него как на существо, мы увидим у него то, что называем органами чувств и органами действия. Он не знает, как он выглядит на самом деле. А червь знает?))) А ты?)))
Но он реагирует! Кнопки - органы чувств. Окно для вывода вводимых значений результата вычислений - что это, как не орган действия? Но кроме того, у него есть внутренние органы. Они тоже действуют. Хоть и очень просто. 
Когда ты нажмешь на кнопку 4, в ответ он выведет в окно 4. Потом ты нажмешь на кнопку "умножить", и это будет ему коммандой, что 4 надо запомнить. Потом нажимаем кнопку 5, он показывает 5. Потом "=" и он вспоминает 4 и умнажает его на 5, выводя 20 на экран. Все это важно не ему, как живому существу, а нам. Нам было важно, чтобы он запомнил 4 и потом достал из памяти и умножил на 5. Для него самого это несущественно. Потому что он просто вычислитель, это не самостоятельное существо, со своей целью. Это наше продолжение в мире программ. Это мы все сделали, а не он, полностью детерминировав ему подобное поведение.
Но допустим, мы хотим оживить его. Пусть он продолжает калькулировать, но представим, что он живой. Что делал бы живой калькулятор? Допустим, для нас все выглядело бы точно также, как и в примере с обычной программой. Но внутри живого происходило бы куда больше процессов (и тратилось бы уйма машинного времени). Ну и не было бы 2 одинаковых калькулятора))))

Но давайте примерно рассмотрим жизнь такого калькулятора.

1. Когда мы нажали бы кнопку 4, он бы почувствовал это.
И здесь нам следует разобраться, а что же такое чувствование? Как это почувствовать? Всем известно, как это, да? Когда тебя кто-то берет за руку, ты это чувствуешь. И так как другой тоже может почувствовать это, то никто, кроме поэтов и философов не разбирается, что значит "почувствовать". Потому что все чувствуют, это принимается без доказательств. Вот, почувстовал и все. Но что это? Информация по нейронам пришла в мозг, и именно там она интерпретировалась как чувство. Как? Где закончилась информация и началось чувствование? Когда? Биологи и прочие задают себе эти вопросы и не могут никак получить ответ. И не получат его. Потому что ответа на этот вопрос не существует. И не потому что вопрос сложный, а потому что он глупый. Мы вычеркнули всю жизнь существа, всю его историю взаимоотношений с миром и берем его в уже готовом, сформировавшемся виде, где чувствование представляется нам какой-то функцией, хранящейся то ли в нейронах, то ли еще в каком органе. Это ошибка. Чувствование - это непрерывный процесс жизни. В начале жизни у ребенка будет одно чувствование, а в конце жизни у старика совсем другое. Причем некоторые чувства будут вообще вначале отсутствовать, а сформируются лишь под давлением среды или из внутренних программ развития.
Вот, когда взрослый человек чувствует прикосновение, то он говорит о целом наборе разнообразных ощущений. Тепло, нежность, сила, давление, влажность и т.п. Это все появляется в осознании сразу или постепенно - по-разному. Но нет одного и того же прикосновения. И что это такое действительно невозможно объяснить, а только назвать. Но что такое называние? Это реакция. Да и само ощущение - это внутренняя реакция, в которой участвуют миллиарды клеток. Синестет может даже услышать запах прикосновения и увидеть какой-нибудь цвет. Все эти наборы сформировались в процессе жизни. И они меняются постоянно. Вот ты дотронулся один раз - это будет одно ощущение. А если сразу после этого опять также дотронулся - уже другое. И реакции могут быть похожими, но все равно разными, никогда не одинаковыми.
Так вот. Даже ваш калькулятор в компьютере почувствует при нажатии кое-что. Но так как у него нет личной истории, это чувство будет всегда одним и тем же. Сегодня, завтра и послезавтра. Одно и то же. Именно за это постоянство мы и ценим компьютеры, так ведь?)) 
А вот наш потенциально интеллектуальный Калькулятор почувствует именно нажатие на 4. И когда он маленький, еще только появившийся из яйца компилятора, это будет значит одно. А когда он поживет достаточно долго - это будет значить совсем другое. Что именно? Кто знает? Все будет зависеть от его истории, от того, как часто нажимали на эту кнопку, какие кнопки еще нажимали и еще огромная куча факторов. Это существо будет буквально вплетено в среду обитания и будет менятся с ним.
Это все классно, скажете вы, но как быть программистам, которые захотят написать такой калькулятор? Если мы дадим им ТЗ с формулировкой: калькулятор должен "почувствовать" нажатие на 4, они нам скажут, что уже и сами почувствовали не ладное))) Да! Когда я говорю, что калькулятор почувствует, я говорю, что он именно почувствует, т.е. вся его история в этот момент будет в сжатом виде отражаться как реакция на данное событие. Чувства невозможно запрограммировать. Но обеспечить возможность запоминать свою личную историю программисты могут. Разве нет?
Так что же должны сделать программисты? Что значит обеспечить личную историю?
Это значит, что калькулятор должен помнить свои реакции. Ведь как калькулятор смотрит на мир? Разве он видит экран, кнопки? Нет, он видит только свои реакции, также как и вы. Мир калькулятора - это мир его реакций и другого мира для калькулятора просто никак не может существовать.
Итак, мы нажали на 4 и калькулятор почувствовал. И что это значит, мы не знаем. Но он почувствовал, потому что он реагирует и потому что у него есть история о себе в каком-то виде. У простого калькулятора эта история проста и никогда не меняется, а у нашего вымышленного - это что-то, что практически невозможно повторить.
Чувство - это реакция. Просто мы внутренние реакции называем чувствами. Но это реакции, такие же, как и движение мышц. Там выделяются вещества, открываются клеточные каналы и т.п. Чем не реакции?

2. Калькулятор запомнил свою реакцию, если это важно. Он не знает, что именно он почувствовал, как и почему. И мы не знаем. Он просто запомнил то, что сейчас с ним происходит, если это важно. 
И теперь нам предстоят разборки с тем, что называть важным, а что нет. 
Иногда мы можем проигнорировать прикосновение к руке и вообще почти никак не заметить его, а иногда мы можем прореагировать бурно и даже опасно. Все зависит от нашей личной истории. Соответственно, запомним мы реакции бурные, важные, а обычные и несущественные проигнорируем.
Бедным программистам снова таки не вполне ясно, как запрограммировать такое поведение? Это же совсем не осязаемые вещи: важно/неважно.
Да, здесь придется попотеть. Что такое важность для калькулятора? Для любого существа это выживание, добыча пищи, продолжение рода. А в мире программ пока видится мне только одна существенная причина для измерения важности - это продолжение личной истории, продолжение выполнения, или, даже если будет останов, чтобы была возможность снова когда-нибудь эту личную историю продолжить. Т.е. программа должна так себя вести во внешней среде, чтобы не провоцировать тех, кто способен удалить ее или остановить. Причем остановка - это не окончательная гибель, и даже удаление рабочего кода не есть окончательная гибель. А вот удаление личной истории - это уже гибель.

Итак, он запомнил реакции. Причем важно понимать, что между стимулом (нажатие на кнопку и реакциями) нет жесткой связи. Поскольку наш калькулятор живой, он постоянно реагирует, в нем выполняется личная история. Он запомнит свои реакции только в том случае, если это будет важно. Т.е. нажатие на кнопку не является прямой причиной запоминания, а лишь косвенной. Эту связь между нажатием на кнопку и своими реакциями молодому калькулятору предстоит открывать. А старый уже конечно ощущает эту важность, поскольку если он не прореагирует никак, то его просто удалят (а может и нет? кто знает?))) Вроде как калькулятору надо быть калькулятором. И в ответ на нажатие 4, нас интересует, чтобы на экране вывода появилась 4. Мы не знаем, там может появиться и 3 или вообще какое-то АГУ-АГУ))) Поднимется у вас рука удалить такой калькулятор? Вот-вот, кто знает? Ясно, что это уже совсем не калькулятор.

Хорошо, оставим пока смысл важности и шутки этики в стороне. Нам все еще не вполне ясно, что является реакциями калькулятора? Что он должен запомнить, в случае необходимости?
Здесь поле эксперимента. Все зависит от реализации. Если мы заложим внутрь нейронную сеть, то можно пробовать запоминать номера сработавших нейронов, их веса. Если это будет что-то другое, способное менять состояния, нам надо как-то запомнить эти состояния. 
На самом деле не важно, что было причиной. Если важность стала высокой, надо запомнить свои реакции.
Даже простой калькулятор можно по-разному реализовать, он может по-разному выглядеть и разные функции предоставлять. Что уж говорить про живой калькулятор?

Примеры личных историй есть в математике. Например, ряд простых чисел выглядит очень сложным и невозможно предсказать, каким будет n-ое простое число. Но поведение ряда очень простое - из натурального ряда просто удаляются каждый 2,3,4 и т.п. член. Т.е. эволюционно это не сложный процесс, но чтобы знать, как будет выглядеть это процесс на n-ой итерации, нам нужны почти все предыдущие шаги. Конечно, есть искусные методы, позволяющие использовать не все шаги, и тем не менее, сложность отыскания n-ого простого числа катастрафически сложная по сравнению со способом построения самого ряда. Построить ряд простых чисел гораздо проще, чем предсказать его поведение и найти в нем взимосвязи.
Точно также, мы с вами обладаем очень простым способом построения личной истории, вы даже не предполагаете, на сколько простой этот способ. Но вычислить совершенно точно поведение каждого индивида очень сложно, поскольку каждое мгновение его жизни происходит личная история, добавляющая и перезаписывающая прежнюю историю.
Еще одним хорошим примером личной истории является клеточный автомат. Простой набор правил порождает невообразимую игру, поведение которой на следующем шаге тривиально, а предсказать картину на любом n-ом шаге очень сложно. В каком-то смысле, клеточный автомат является живым существом. У него есть история, но она слабо связана с внешним миром.
У каждого нейрона есть личная история.


1. Есть клеточный автомат. Что это такое - можете посмотреть в вики подробнее. У нас он будет многомерный, в кранем случае 2-х мерный. Но я склоняюсь минимум к 3-х мерному с 10 слоями.
2. Этот автомат живет своей жизнью (посмотрите например игру Жизнь конвея в гугле), но ему мешают жить программные нейроны (по типу персептрона).
3. Нейроновые щупальца (синапсы) - это клетки этого клеточного автомата. Не все клетки являются синапсами, а некоторые.
4. Реакции нейронов (аксоны на дендритах) тоже возвращаются в этот клеточный автомат. Получается, что каждый нейрон слушает клеточный автомат, чего-то реагирует, и свой ответ в него же посылает.
5. Кроме этого, нейроны участвуют в процессах памяти. Они запоминают свои ответы, если эти ответы повторяются. Они ассоциируются с ответами других нейронов и т.п.
6. Память 3 видов: что-то типа ОЗУ краткосрочная, что-то типа ПЗУ долгосрочная и ДНК-память, где вся история с сжатом виде хранится.
7. У клеточного автомата есть входы с внешнего мира и выходы на внешний мир. Здесь еще нужно думать, особенно с выходами. Но это в процессе додумается.
8. Утверждаю, эта хрень будет обучаться, а достаточно большая такая хрень будет не хуже человека рассказывать про ощущения, любовь и прочую ерунду, со временем. Тест Тьюринга точно пройдет.